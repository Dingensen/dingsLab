## VECTORS #####################################################################
  #construct specific vector
vec <- c(1,2,3)
  #vector with element names
c(apple = 1, banana = 2, "kiwi fruit" = 3, 4)
  #initialise vector of data type
vector("numeric", 5)
  #sequence 1 to 10
1:10
  #length of a vector
length(vec)
  #indexing vector:
vec[1] # returns FIRST element. !!!INDEX STARTS AT 1!!!
  #append
apped(vec, 4:6, after=length(vec)) #or
vec <- c(vec, 4:6)


## MATRIX ######################################################################
matrix()
  #example
mat <- matrix(1:9, nrow = 3, ncol = 3)
mat1 <- matrix(
  c(1, 2, 3,
    2, 3, 1),
  nrow = 2, ncol=3
)
  #accessing
mat1[1,2] #first row, second coloumn
mat1[1,]  #entire first row
mat1[]    #entire matrix

## LISTS #######################################################################
#data structure containing components of mixed data types
list()
  #example
list <- list("a" = 1.5, "b" = TRUE "c" = 1:3)
  #accessing
list[c(1:3)] #returns all contents
list$a #returns 1.5


## DATA-FRAMES #################################################################
#list, where each component has same length
  # df skeleton
data <- data.frame(
)
  #df example
data <- data.frame(
  attrib1 = c(1:4)
  attrib2 = c("one","two","three","four")
  attrib3 = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11")),
)
  #accessing data
data$attrib1
data$attriv2[1]
  #methods
names(data) #returns all attribute names
ncol(data)
nrows(data) #returns number of cols and rows
length(data) #returns length of all attribs


## FUNCTIONS ###################################################################
  # function skeleton
functionName <- function(param){
  return(TRUE)
}
